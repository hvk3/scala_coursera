package week2

import math.abs

object fixed_points {
	val tolerance = 0.00001                   //> tolerance  : Double = 1.0E-5
	def isCloseEnough(x: Double, y: Double) =
		abs((x - y) / x) < tolerance      //> isCloseEnough: (x: Double, y: Double)Boolean
	def fixedPoint(f: Double => Double)(firstGuess: Double) = {
		def iterate(guess: Double): Double = {
			println("guess : " + guess)
			val next = f(guess)
			if (isCloseEnough(guess, next)) next
			else iterate(next)
		}
		iterate(firstGuess)
	}                                         //> fixedPoint: (f: Double => Double)(firstGuess: Double)Double
	fixedPoint(x => 1 + x / 2)(1)             //> guess : 1.0
                                                  //| guess : 1.5
                                                  //| guess : 1.75
                                                  //| guess : 1.875
                                                  //| guess : 1.9375
                                                  //| guess : 1.96875
                                                  //| guess : 1.984375
                                                  //| guess : 1.9921875
                                                  //| guess : 1.99609375
                                                  //| guess : 1.998046875
                                                  //| guess : 1.9990234375
                                                  //| guess : 1.99951171875
                                                  //| guess : 1.999755859375
                                                  //| guess : 1.9998779296875
                                                  //| guess : 1.99993896484375
                                                  //| guess : 1.999969482421875
                                                  //| res0: Double = 1.9999847412109375
	
}