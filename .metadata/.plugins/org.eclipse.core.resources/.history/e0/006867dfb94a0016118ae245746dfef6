package week2

import math.abs

object fixed_points {
	val tolerance = 0.00001                   //> tolerance  : Double = 1.0E-5

	def isCloseEnough(x: Double, y: Double) =
		abs((x - y) / x) < tolerance      //> isCloseEnough: (x: Double, y: Double)Boolean

	def fixedPoint(f: Double => Double)(firstGuess: Double) = {
		def iterate(guess: Double): Double = {
			println("guess : " + guess)
			val next = f(guess)
			if (isCloseEnough(guess, next)) next
			else iterate(next)
		}
		iterate(firstGuess)
	}                                         //> fixedPoint: (f: Double => Double)(firstGuess: Double)Double

	def sqrt(x: Double): Double = fixedPoint(y => (x / y + y) / 2)(1)
                                                  //> sqrt: (x: Double)Double
	sqrt(2)                                   //> guess : 1.0
                                                  //| guess : 1.5
                                                  //| guess : 1.4166666666666665
                                                  //| guess : 1.4142156862745097
                                                  //| res0: Double = 1.4142135623746899

}