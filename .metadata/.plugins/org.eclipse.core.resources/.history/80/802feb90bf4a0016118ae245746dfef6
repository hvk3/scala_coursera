package week3

object rationals {
	val x = new Rational(1, 3)                //> x  : week3.Rational = 1/3
	val y = new Rational(5, 7)                //> y  : week3.Rational = 5/7
	val z = new Rational(3, 2)                //> z  : week3.Rational = 3/2
	x.sub(y).sub(z)                           //> res0: week3.Rational = -79/42
	y.add(y)                                  //> res1: week3.Rational = 10/7
	x.less(y)                                 //> res2: Boolean = true
	x.max(y)                                  //> res3: week3.Rational = 5/7
	                                          //> java.lang.IllegalArgumentException: requirement failed: Denominator cannot b
                                                  //| e zero
                                                  //| 	at scala.Predef$.require(Predef.scala:224)
                                                  //| 	at week3.Rational.<init>(week3.rationals.scala:16)
                                                  //| 	at week3.rationals$$anonfun$main$1.strange$1(week3.rationals.scala:11)
                                                  //| 	at week3.rationals$$anonfun$main$1.apply$mcV$sp(week3.rationals.scala:12
                                                  //| )
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$$anonfun$$exe
                                                  //| cute$1.apply$mcV$sp(WorksheetSupport.scala:76)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.redirected(W
                                                  //| orksheetSupport.scala:65)
                                                  //| 	at org.scalaide.worksheet.runtime.library.WorksheetSupport$.$execute(Wor
                                                  //| ksheetSupport.scala:75)
                                                  //| 	at week3.rationals$.main(week3.rationals.scala:3)
                                                  //| 	at week3.rationals.main(week3.rationals.scala)
}

class Rational(x: Int, y: Int) {
	require(y != 0, "Denominator cannot be zero")
	private def gcd(a: Int, b: Int): Int =
		if (b == 0) a
		else gcd(b, a % b)
	private val g = gcd(x, y)

	def numer = x / g
	def denom = y / g

	def less(that: Rational) = numer * that.denom < denom * that.numer

	def max(that: Rational) = if (this.less(that)) that else this

	def add(that: Rational) = {
		new Rational(numer * that.denom + denom * that.numer, denom * that.denom)
	}

	def sub(that: Rational) = add(that.neg)

	def neg =
		new Rational(-x, y)

	override def toString = numer + "/" + denom
}